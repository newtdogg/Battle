Abbreviations:

TCP/IP: Transmission Control Protocol/Internet Protocol
HTTP: Hypertext Transfer Protocol
URL:


HTTP Verbs
***** explain
GET: fetch an existing resource. The URL contains all the necessary information the server needs to locate and return the resource.
POST: create a new resource. POST requests usually carry a payload that specifies the data for the new resource.
PUT: update an existing resource. The payload may contain the updated data for the resource.
DELETE: delete an existing resource.


Status Codes
  2xx: Successful

  3xx: Redirection
    - example: 301 Moved Permanently: the resource is now located at a new URL.

  4xx: Client Error
    - example: 400 Bad Request: the request was malformed.

  5xx: Server Error
    - 501 Not Implemented: the server does not yet support the requested functionality.


The HTTP specification states that a request or response message has the following generic structure:

message = <start-line>
          *(<message-header>)
          CRLF
          [<message-body>]

          <start-line> = Request-Line | Status-Line
          <message-header> = Field-Name ':' Field-Value

Response Format:
Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF
example: HTTP/1.1 200 OK


Capybara

"Capybara helps you test web applications by simulating how a real user would interact with your app."

It is a web-based automation framework, which allows for automation of web applications for testing purposes.
With this you can simulate how a user would interact with a web app, able to receive pages, parse the HTML and submit the forms.
Advantages of Capybara include its ability to automate repeating and long running tasks on the web, and allows for modular tests which are easy to write and maintain
